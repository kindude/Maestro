# Generated by Django 5.1.5 on 2025-03-11 23:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MaestroInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(choices=[('violin', 'Violin'), ('guitar', 'Guitar'), ('piano', 'Piano'), ('drums', 'Drums')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='MaestroClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('duration', models.IntegerField()),
                ('capacity', models.IntegerField(default=20)),
                ('available', models.BooleanField(default=True)),
                ('is_group', models.BooleanField(default=0)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('instrument', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='MaestroApp.maestroinstrument')),
            ],
        ),
        migrations.CreateModel(
            name='MaestroLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('duration', models.IntegerField(default=60)),
                ('is_group', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=3, max_digits=7)),
                ('dt', models.DateTimeField()),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('associated_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='MaestroApp.maestroclass')),
            ],
        ),
        migrations.CreateModel(
            name='MaestroAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField(max_length=1000)),
                ('date_due', models.DateTimeField()),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MaestroApp.maestrolesson')),
            ],
        ),
        migrations.CreateModel(
            name='MaestroUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('balance', models.DecimalField(decimal_places=3, default=0, max_digits=7)),
                ('assignments', models.ManyToManyField(blank=True, related_name='users', to='MaestroApp.maestroassignment')),
                ('classes', models.ManyToManyField(blank=True, related_name='users', to='MaestroApp.maestroclass')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('instruments', models.ManyToManyField(blank=True, related_name='users', to='MaestroApp.maestroinstrument')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'MaestroUser',
                'verbose_name_plural': 'MaestroUsers',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='maestroclass',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='teaching_classes', to=settings.AUTH_USER_MODEL),
        ),
    ]
